{
    "[python]": {
        "editor.formatOnType": true,
        "editor.formatOnPaste": true,
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "charliermarsh.ruff",
        "editor.codeActionsOnSave": {
            "source.organizeImports": "never",
            "source.fixAll": "explicit"
        }
    },
    "notebook.cellToolbarLocation": {
        "default": "right",
        "jupyter-notebook": "left"
    },
    "notebook.formatOnSave.enabled": true,
    "notebook.lineNumbers": "on",
    "notebook.codeActionsOnSave": {
        "notebook.source.fixAll": "explicit",
        "notebook.source.organizeImports": "explicit"
    },
    "isort.args": ["--profile","black"],
    "workbench.settings.editor": "json",
    "gremlins.showInProblemPane": true,
    "python.languageServer": "Pylance",
    "editor.defaultFormatter": "charliermarsh.ruff",
    "[markdown]": {
        "editor.defaultFormatter": "DavidAnson.vscode-markdownlint"
    },
    "workbench.colorCustomizations": {},
    "workbench.colorTheme": "Dracula Theme",
    "editor.suggestSelection": "first",
    "editor.minimap.enabled": false,
    "editor.stickyScroll.enabled": true,
    "terminal.integrated.env.windows": {
        "PYTHONPATH": "${workspaceFolder}"
    },
    "terminal.integrated.env.linux": {
        "PYTHONPATH": "${workspaceFolder}"
    },
    "terminal.integrated.env.osx": {
        "PYTHONPATH": "${workspaceFolder}"
    },
    "[yaml]": {
        "editor.defaultFormatter": "redhat.vscode-yaml"
      },
    "[toml]": {
        "editor.defaultFormatter": "tamasfe.even-better-toml"
    },
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "files.associations": {
        ".github/CODEOWNERS": "plaintext"
    },
    "workbench.iconTheme": "material-icon-theme",
    "githubPullRequests.pullBranch": "never",
    "ltex.additionalRules.motherTongue": "pt-BR",
    "ltex.language": "pt-BR",
    "explorer.compactFolders": false,
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook"
    },
    "code-runner.runInTerminal": true,
    "code-runner.clearPreviousOutput": true,
    "code-runner.executorMap": {
        "python": "clear && python3 -u"
    },
    "liveServer.settings.donotShowInfoMsg": true,
    "github.copilot.enable": {
        "quarto": true,
        "*": true,
        "plaintext": true,
        "markdown": true,
        "scminput": true
    },
    "files.trimTrailingWhitespace": true,
    "autoDocstring.docstringFormat": "numpy",
    "autoDocstring.generateDocstringOnEnter": false,
    "diffEditor.ignoreTrimWhitespace": false,
    "gitlens.ai.experimental.generateCommitMessage.enabled": false,
    "notebook.output.minimalErrorRendering": true,
    "notebook.experimental.generate": true,
    "terminal.integrated.profiles.osx": {

        "bash": {
            "path": "bash",
            "args": [
                "-l"
            ],
            "icon": "terminal-bash"
        },
        "zsh": {
            "path": "zsh",
            "args": [
                "-l"
            ]
        },
        "fish": {
            "path": "fish",
            "args": [
                "-l"
            ]
        },
        "tmux": {
            "path": "tmux",
            "icon": "terminal-tmux"
        },
        "pwsh": {
            "path": "pwsh",
            "icon": "terminal-powershell"
        }
    },
    "terminal.integrated.defaultProfile.osx": "zsh",
    "terminal.integrated.defaultProfile.linux": "zsh",
    "github.copilot.editor.enableAutoCompletions": true,
    "redhat.telemetry.enabled": false,
    "markdown.marp.themes": [
        "https://raw.githubusercontent.com/rnd195/my-marp-themes/live/beam.css",
        "https://raw.githubusercontent.com/rnd195/my-marp-themes/live/gradient.css",
        "https://raw.githubusercontent.com/favourhong/Awesome-Marp/main/themes/am_template.scss",
        "https://raw.githubusercontent.com/favourhong/Awesome-Marp/main/themes/am_dark.scss",
        "https://raw.githubusercontent.com/dracula/marp/refs/heads/master/dracula/dracula.css"
    ],
    "interactiveWindow.executeWithShiftEnter": true,
    "notebook.consolidatedOutputButton": false,
    "terminal.integrated.commandsToSkipShell": [
        "language-julia.interrupt"
    ],
    "julia.symbolCacheDownload": true,
    "julia.enableTelemetry": false,
    "scm.experimental.showHistoryGraph": true,
    "security.workspace.trust.untrustedFiles": "open",
    "codesnap.shutterAction": "copy",
    "peacock.favoriteColors": [
        {
            "name": "Angular Red",
            "value": "#dd0531"
        },
        {
            "name": "Azure Blue",
            "value": "#007fff"
        },
        {
            "name": "JavaScript Yellow",
            "value": "#f9e64f"
        },
        {
            "name": "Mandalorian Blue",
            "value": "#1857a4"
        },
        {
            "name": "Node Green",
            "value": "#215732"
        },
        {
            "name": "React Blue",
            "value": "#61dafb"
        },
        {
            "name": "Something Different",
            "value": "#832561"
        },
        {
            "name": "Svelte Orange",
            "value": "#ff3d00"
        },
        {
            "name": "Vue Green",
            "value": "#42b883"
        },
        {
            "name": "padrao",
            "value": "#252852"
        }
    ],
    "gitlens.advanced.messages": {
        "suppressIntegrationDisconnectedTooManyFailedRequestsWarning": true
    },
    "jupyter.askForKernelRestart": false,
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "debugpy.showPythonInlineValues": true,
    "github.copilot.chat.commitMessageGeneration.instructions": [
        {"text": "Use conventional commit message format."},
        {"text": "Use the following format: <type>(<scope>): <description> <detailed description>."},
        {"text": "Where <type> is one of the following: feat, fix, chore, docs, style, refactor, perf, test, build, ci, revert. "},
        {"text": "<scope> is the scope of the change (optional). <description> is a short description of the change in brazilian portuguese. "},
        {"text": "<detailed description> is a detailed description of the changes in brazilian portuguese. "},
        {"text": "Example: feat(api): adiciona nova funcao de login \n\n Foi adicionado um novo endpoint para login de usuarios com email e senha. O novo endpoint permite que os usuarios se autentiquem de forma mais rapida e segura, utilizando o protocolo OAuth2. \n\n O novo endpoint foi testado com sucesso em ambiente de desenvolvimento e estara disponivel na proxima versao da API."}
    ],
    "githubPullRequests.experimental.chat": true,
    "websearch.preferredEngine": "bing",
    "makefile.configureOnOpen": false,
    "github.copilot.selectedCompletionModel": "",
    "githubPullRequests.pullRequestDescription": "Copilot",
    "python.analysis.aiCodeActions": {
        "generateDocstring": true
    },
    "githubPullRequests.experimental.useQuickChat": true,
    "githubPullRequests.defaultMergeMethod": "rebase",
    "gitlens.launchpad.indicator.enabled": false,
    "github.copilot.nextEditSuggestions.enabled": true,
    "chat.agent.enabled": true,
    "github.copilot.chat.agent.thinkingTool": true,
    "chat.instructionsFilesLocations": {
        ".github/instructions": true,
        "/Users/vscode/repos/instructions": true
    },
    "github.copilot.chat.codesearch.enabled": true,
    "docker.extension.enableComposeLanguageServer": false,
    "excalidraw.theme": "light"
}
